
		Building Gnash from its git repository

The source code of Gnash is checked into a git repository.  (See the main
web page for Gnash for the current details on where that repository is.)
The instructions for building Gnash in README and INSTALL assume that
you are starting from a released "tarball" (e.g. gnash-VERSION.tar.gz).
The tarball contains some files that are not in the original source code
in git.  They are generated using tools that not everyone is expected
to have.  This simplifies the process of building Gnash releases, for
ordinary people.

People who are actively working on maintaining Gnash need to have these
extra tools.  They are used to build configuration files, international
message translation catalogs, and such.  After you check out the source
code of Gnash from git, you'll have to run a single script that rebuilds
all these files.  This script is called "./autogen.sh", and it lives
in the top-level directory of gnash.  You run it without any arguments.
When it finishes, you can run "./configure", with or without arguments,
as instructed in the README and INSTALL files.

A variety of GNU programs are required when checking out the
git tree and building the auto-generated files.  If anything is
missing, ./autogen.sh will (probably) tell you, or produce a relatively
understandable error message.  When in doubt, look at the *first*
error message.  Here are the programs required:

GNU		Minimum		RPM or DEB package names:
Package		Version  Debian		Ubuntu		Fedora		Gentoo
-------         -------  -----------    ------------    ---------	----------
automake	1.9.6	automake1.9	automake1.9	automake
autoconf	2.59			autoconf	autoconf
git		1.3			git		git
gettext		0.14.6			gettext		gettext
libtool		1.5.22			libtool		libtool
		1.5.22			libltdl3-dev	libtool

The "Minimum Version" is not necessarily the lowest version that will work;
it's the lowest version that the Gnash team has recently tested with.  
(You'll also need some very common tools, for example the standard Unix/GNU
core utilities (ls, mv); text utilities (grep, sed), and shell (sh).
Unless your system is very unusual, these will already be installed.)

The version dependencies among these tools are, unfortunately, more
complicated than we can describe here.  When ./autogen.sh is failing
for you, either upgrade all the things in the above table to the latest
version available (which may break other packages you're trying to build),
or seek a compatible set of tools, perhaps the set that comes by default
in your operating system (if any).

If you are unable to run ./autogen.sh successfully on your system, consider
building Gnash from a tarball release.  Or, move the git tree to a system
on which you can run ./autogen.sh successfully, then move it back to the
system you are trying to build on.

Once ./autogen.sh completes successfully, you can go on with the normal
instructions found in the README file.
